#!/bin/bash

##################初始化全局变量区#################

#获取文件绝对路径

if [ $(echo $0 | grep '^/') ]; then
	    g_rootPath=$(dirname $0)
	else
		g_rootPath=$(pwd)/$(dirname $0)
fi
g_paramNum=$#
g_name=$1
g_todo=$2

##################函数定义区###########################

CheckParameters()
{
	paramNum=$1
	name=$2
	todo=$3
	
	if [ $paramNum -eq 0 ]; then
		echo "please input object name. like:"
		echo "    vimobj name"
		exit
	fi

#	grep "name=" .configure | grep $name > /dev/null
#	if [ $? -eq 1 ]; then # 为1表示没有这个name	
#		if [ ! -d $name ]; then
#			echo "input error"
#			exit
#		fi
#	fi

	if [ $paramNum -gt 1 ]; then
		if [[ "$todo" != "update" && "$todo" != "clean" && "$todo" != "config" ]]; then
			echo "input todo error"
			exit
		fi
	fi
}

CreateObject()
{	
	name=$1

	if [ ! -d $name ]; then
		mkdir -p $name
		touch $name/run.sh
		chmod +x $name/run.sh

		sed -i  "s/name=\".*\"/name=\"${name}\"/g" .configure

		cp .configure $name/configure	
		return
	fi

}

ObjectConfig()
{
	name=$1
	vim $name/configure
	

	echo "name=\"$name\"" > $name/run.sh
	cat $name/configure >> $name/run.sh
	echo "g_rootPath=$g_rootPath" >> $name/run.sh
	cat .template >> $name/run.sh
	
	exit
}

RunOldObject()
{	
		name=`grep "name=\"" .configure`
		if [ "$name" == "name=\"\"" ]; then
			echo "nothing object"
		fi
		name=${name#*\"}
		name=${name%*\"}
		if [ ! -d $name  ]; then
			echo "nothing object"
		fi
		$name/run.sh
		exit
}
Clean()
{
	name=$1
	rm -rf $name
	exit
}

main()
{
	paramNum=$1
	name=$2
	todo=$3

	cd $g_rootPath
	if [ $paramNum -eq 0 ]; then
		RunOldObject
	fi
	CheckParameters $paramNum $name $todo
	

	if [ "$todo" == "clean" ]; then
		Clean $name	
	fi
	
	CreateObject $name

	if [ "$todo" == "config" ]; then
		ObjectConfig $name	
	fi 
	
	$name/run.sh $todo

}

################函数调用区###################
main $g_paramNum $g_name $g_todo